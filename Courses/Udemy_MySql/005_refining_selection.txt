=============================DISTINCT==========================================================

DISTINCT combined with ORDER BY needs a temporary table in many cases.

Because DISTINCT may use GROUP BY, learn how MySQL works with columns in ORDER BY or HAVING clauses that are not part of the selected columns. “MySQL Handling of GROUP BY”.

In most cases, a DISTINCT clause can be considered as a special case of GROUP BY. For example, the following two queries are equivalent:

Due to this equivalence, the optimizations applicable to GROUP BY queries can be also applied to queries with a DISTINCT clause. Thus, for more details on the optimization possibilities for DISTINCT queries, “GROUP BY Optimization”.

When combining LIMIT row_count with DISTINCT, MySQL stops as soon as it finds row_count unique rows.

	eg. SELECT DISTINCT c1, c2, c3 FROM t1 (note in resultant table no two rows will have same entry.but two col. could be same).
	eg. WHERE c1 > const;

	eg. SELECT c1, c2, c3 FROM t1
	eg. WHERE c1 > const GROUP BY c1, c2, c3;
	
	eg. SELECT author_lname FROM books;
 
	eg. SELECT DISTINCT author_lname FROM books;
 
	eg. SELECT author_fname, author_lname FROM books;
 
	eg. SELECT DISTINCT CONCAT(author_fname,' ', author_lname) FROM books;
 
	eg. SELECT DISTINCT author_fname, author_lname FROM books;


========================================ORDER BY=====================================================


SELECT * FROM books
ORDER BY author_lname; (by default it is ascending)
 
SELECT * FROM books
ORDER BY author_lname DESC;
 
SELECT * FROM books
ORDER BY released_year;

SELECT book_id, author_fname, author_lname, pages
FROM books ORDER BY 2 desc;	(2 denotes second index of select that is fname,if we replace with 3 means now ordering take by lname.)
 
SELECT book_id, author_fname, author_lname, pages
FROM books ORDER BY author_lname, author_fname;	(first it order in lname then in case of tie it order by fname).

===============================================LIMIT=================================================

mysql> SELECT * FROM ratings ORDER BY category, id;
+----+----------+--------+
| id | category | rating |
+----+----------+--------+
|  1 |        1 |    4.5 |
|  5 |        1 |    3.2 |
|  3 |        2 |    3.7 |
|  4 |        2 |    3.5 |
|  6 |        2 |    3.5 |
|  2 |        3 |    5.0 |
|  7 |        3 |    2.7 |
+----+----------+--------+

mysql> SELECT * FROM ratings ORDER BY category, id LIMIT 5;		# Limit 5 means only 5 rows will print from starting.
+----+----------+--------+
| id | category | rating |
+----+----------+--------+
|  1 |        1 |    4.5 |
|  5 |        1 |    3.2 |
|  3 |        2 |    3.7 |
|  4 |        2 |    3.5 |
|  6 |        2 |    3.5 |
+----+----------+--------+

SELECT title FROM books LIMIT 3;
 
SELECT title FROM books LIMIT 1;
 
SELECT title FROM books LIMIT 10;
 
SELECT * FROM books LIMIT 1;
 
SELECT title, released_year FROM books 
ORDER BY released_year DESC LIMIT 5;
 
SELECT title, released_year FROM books 
ORDER BY released_year DESC LIMIT 1;
 
SELECT title, released_year FROM books 
ORDER BY released_year DESC LIMIT 14;
 
SELECT title, released_year FROM books 
ORDER BY released_year DESC LIMIT 0,5; 	(it will return rows from 0 to count 5)
 
SELECT title, released_year FROM books 
ORDER BY released_year DESC LIMIT 0,3;
 
SELECT title, released_year FROM books 
ORDER BY released_year DESC LIMIT 1,3;	(it will return from row 1 to count 3(no of row 3)
 
SELECT title, released_year FROM books 
ORDER BY released_year DESC LIMIT 10,1; (it will return 10th row only)
 
SELECT * FROM tbl LIMIT 95,18446744073709551615;	(if there is more than 95 row then it will return otherwise it return empty table.
 
SELECT title FROM books LIMIT 5;
 
SELECT title FROM books LIMIT 5, 123219476457;
 
SELECT title FROM books LIMIT 5, 50;

===============================================LIKE(better searching)======================================================

SELECT title, author_fname, author_lname, pages 
FROM books
WHERE author_fname LIKE '%da%';	(% means in prefix or suffix means zero of more char may be in prefix or suffix)
 
SELECT title, author_fname, author_lname, pages 
FROM books
WHERE title LIKE '%:%';	(return all rows  with anywhere colon in title)
 
SELECT * FROM books
WHERE author_fname LIKE '____';	underscore means exaclty that much character 
 
SELECT * FROM books
WHERE author_fname LIKE '_a_';	(here it return all row with faname contain exactly one char before and after a.)

===================================================Escaping char================================================

-- To select books with '%' in their title:
SELECT * FROM books
WHERE title LIKE '%\%%';
 
-- To select books with an underscore '_' in title:
SELECT * FROM books
WHERE title LIKE '%\_%';





















